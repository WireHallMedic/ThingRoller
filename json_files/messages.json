{
	"botInfo":"Hello, I'm ThingRoller! I roll dice and tables and stuff. I am case-sensitive (use lower case).\n__Recognized Commands__:"
	, "formatExamples":"  !roll d6\n  !r 1d6\n  !r advantage\n  !r disadvantage\n  !r 1d6 + 3\n  !r advantage + d4 + 3d8 - 8\n  !r -4\n  !r 5 * 3\n  !r -3d6 / 4\n  !r e 1d6\n  !r -e 1d6\n  !r 2d6, 3d8 + 5\n  !r e 1d8 + 2, 1d6 + 2\n  Advantage is the higher of two d20\n  Disadvantage is the lower of two d20\n  If the command includes exploding dice, dice in all groups will be exploding"
	, "parsingFailure":"I feel like I should calculate '{}', but can't parse it. Sorry."
	, "nameParsingFailure":"I was unable to parse the command {}. Please enter name generation in the format of !name [type] [gender]."
	, "formatNotes":"Note: I don't recognize parentheses, and I evaluate left to right. I won't roll more than a million dice at a time."
	, "goodStatus":"ThingRoller status: online\nJokers: {}"
	,"recognizedCommands":
	{
		"!roll [dice expression]":" - roll and calculate. Start with 'e' or '-e' for exploding dice. Can include multiple groups, separated by commas."
		,"!r [dice expression]":" - identical to !roll"
		,"!examples":" - show examples of legal dice expressions"
		,"!fudge":" - roll 4dF (used in the game FUDGE)"
		,"!fate":" - roll 4dF (used in the game Fate)"
		,"!tavern <1-20>":" - generate a random tavern name"
		,"!statblock":" - 4d6 drop the lowest six times"
		,"!interlude":" - generate an interlude"
		,"!name [type] [gender] <1-20>":" - generate 5 names, or a user-specified number. I can generate names of the following type: angel (genderless), demon (genderless), dragon (genderless), dragonborn, dwarf, elf, european, gnome, halfling, orc, and American."
		,"!relic":" - generate relic details"
		,"!quest <1-5>":" - generate a random quest using the Tiny Dungeons method, or up to five at a time."
		,"!kungfu <1-20>":" - generate a random Kung Fu move name"
		,"!town <1-20>":" - generate a random town name"
		,"!draw <1-52>":" - draw a card from a standard 52-card deck. Deck reshuffles when it runs out."
		,"!shuffle":" - resuffle the deck (leaving jokers as they already were; in or out)"
		,"!jokers":" - resuffle the deck, using jokers"
		,"!nojokers":" - resuffle the deck, leaving jokers out"
	}
	,"commandNotes":"*<> indicates an optional argument*"
}